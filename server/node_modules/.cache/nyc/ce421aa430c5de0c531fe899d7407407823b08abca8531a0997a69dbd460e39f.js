var cov_28ny8z7ajn=function(){var path="/home/user/Desktop/javascript/FundooNotes/server/middleware/tokenGeneration.js";var hash="594c6eb3fcc4e7a9037552f90a902c7bf54dc092";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/user/Desktop/javascript/FundooNotes/server/middleware/tokenGeneration.js",statementMap:{"0":{start:{line:8,column:12},end:{line:8,column:35}},"1":{start:{line:13,column:0},end:{line:31,column:1}},"2":{start:{line:14,column:4},end:{line:30,column:5}},"3":{start:{line:18,column:22},end:{line:18,column:91}},"4":{start:{line:22,column:18},end:{line:26,column:9}},"5":{start:{line:27,column:8},end:{line:27,column:19}},"6":{start:{line:29,column:8},end:{line:29,column:50}},"7":{start:{line:36,column:0},end:{line:54,column:1}},"8":{start:{line:37,column:4},end:{line:53,column:5}},"9":{start:{line:41,column:22},end:{line:41,column:88}},"10":{start:{line:45,column:18},end:{line:49,column:9}},"11":{start:{line:50,column:8},end:{line:50,column:19}},"12":{start:{line:52,column:8},end:{line:52,column:50}},"13":{start:{line:59,column:0},end:{line:77,column:1}},"14":{start:{line:60,column:4},end:{line:76,column:5}},"15":{start:{line:64,column:22},end:{line:64,column:89}},"16":{start:{line:68,column:18},end:{line:72,column:9}},"17":{start:{line:73,column:8},end:{line:73,column:19}},"18":{start:{line:75,column:8},end:{line:75,column:50}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:39},end:{line:13,column:40}},loc:{start:{line:13,column:58},end:{line:31,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:36,column:36},end:{line:36,column:37}},loc:{start:{line:36,column:55},end:{line:54,column:1}},line:36},"2":{name:"(anonymous_2)",decl:{start:{line:59,column:37},end:{line:59,column:38}},loc:{start:{line:59,column:56},end:{line:77,column:1}},line:59}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0,"1":0,"2":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"594c6eb3fcc4e7a9037552f90a902c7bf54dc092"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/***********************************************
 * @Purpose - FundooNotes (Token Generation)
 * @file    - tokenGeneration.js
 * @author  - Shriniwas Nakka
 * @since   - 23/07/2019
 ***********************************************/const jwt=(cov_28ny8z7ajn.s[0]++,require('jsonwebtoken'));/**
 * @description : token generation for registration api
 */cov_28ny8z7ajn.s[1]++;module.exports.registerTokenGenerate=function(payload){cov_28ny8z7ajn.f[0]++;cov_28ny8z7ajn.s[2]++;try{/**
         * @description : signs the given payload into JSON web token payload 
         */const token=(cov_28ny8z7ajn.s[3]++,jwt.sign(payload,process.env.registerSecretKey,{expiresIn:'1d'}));/**
         * @description : returns message with token after successfully generating token 
         */var msg=(cov_28ny8z7ajn.s[4]++,{success:true,mesasge:"Token generated successfully",token:token});cov_28ny8z7ajn.s[5]++;return msg;}catch(err){cov_28ny8z7ajn.s[6]++;console.log('Failed to generate tokens.');}};/**
 * @description : token generation for login api
 */cov_28ny8z7ajn.s[7]++;module.exports.loginTokenGenerate=function(payload){cov_28ny8z7ajn.f[1]++;cov_28ny8z7ajn.s[8]++;try{/**
         * @description : signs the given payload into JSON web token payload 
         */const token=(cov_28ny8z7ajn.s[9]++,jwt.sign(payload,process.env.loginSecretKey,{expiresIn:'1d'}));/**
         * @description : returns message with token after successfully generating token 
         */var msg=(cov_28ny8z7ajn.s[10]++,{success:true,mesasge:"Token generated successfully",token:token});cov_28ny8z7ajn.s[11]++;return msg;}catch(err){cov_28ny8z7ajn.s[12]++;console.log('Failed to generate tokens.');}};/**
 * @description : token generation for forgot api
 */cov_28ny8z7ajn.s[13]++;module.exports.forgotTokenGenerate=function(payload){cov_28ny8z7ajn.f[2]++;cov_28ny8z7ajn.s[14]++;try{/**
         * @description : signs the given payload into JSON web token payload 
         */const token=(cov_28ny8z7ajn.s[15]++,jwt.sign(payload,process.env.forgotSecretKey,{expiresIn:'1d'}));/**
         * @description : returns message with token after successfully generating token 
         */var msg=(cov_28ny8z7ajn.s[16]++,{success:true,mesasge:"Token generated successfully",token:token});cov_28ny8z7ajn.s[17]++;return msg;}catch(err){cov_28ny8z7ajn.s[18]++;console.log('Failed to generate tokens.');}};